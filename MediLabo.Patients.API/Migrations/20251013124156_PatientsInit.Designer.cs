// <auto-generated />
using System;
using MediLabo.Patients.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediLabo.Patients.API.Migrations
{
    [DbContext(typeof(PatientDbContext))]
    [Migration("20251013124156_PatientsInit")]
    partial class PatientsInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediLabo.Patients.API.Models.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Homme"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Femme"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Autre"
                        });
                });

            modelBuilder.Entity("MediLabo.Patients.API.Models.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1 Brookside St",
                            BirthDate = new DateTime(1966, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test",
                            GenderId = 2,
                            IsDeleted = false,
                            LastName = "TestNone",
                            Phone = "100-222-3333"
                        },
                        new
                        {
                            Id = 2,
                            Address = "2 High St",
                            BirthDate = new DateTime(1945, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test",
                            GenderId = 1,
                            IsDeleted = false,
                            LastName = "TestBorderline",
                            Phone = "200-333-4444"
                        },
                        new
                        {
                            Id = 3,
                            Address = "3 Club Road",
                            BirthDate = new DateTime(2004, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test",
                            GenderId = 1,
                            IsDeleted = false,
                            LastName = "TestInDanger",
                            Phone = "300-444-5555"
                        },
                        new
                        {
                            Id = 4,
                            Address = "4 Valley Dr",
                            BirthDate = new DateTime(2002, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test",
                            GenderId = 2,
                            IsDeleted = false,
                            LastName = "TestEarlyOnset",
                            Phone = "400-555-6666"
                        });
                });

            modelBuilder.Entity("MediLabo.Patients.API.Models.Entities.Patient", b =>
                {
                    b.HasOne("MediLabo.Patients.API.Models.Entities.Gender", "Gender")
                        .WithMany("Patients")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("MediLabo.Patients.API.Models.Entities.Gender", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
