@using MediLabo.Web.Extensions
@using MediLabo.Web.Models

@{
    var toastMessages = TempData.GetToastMessages();
}

@if (toastMessages.Any())
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 11000;">
        @foreach (var toast in toastMessages)
        {
            var cssClass = toast.Type switch
            {
                ToastType.Success => "bg-success",
                ToastType.Error => "bg-danger",
                ToastType.Info => "bg-info",
                _ => "bg-secondary"
            };

            var icon = toast.Type switch
            {
                ToastType.Success => "✓",
                ToastType.Error => "✕",
                ToastType.Info => "ℹ",
                _ => "•"
            };

            <div class="toast align-items-center text-white @cssClass border-0" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="4000">
                <div class="d-flex">
                    <div class="toast-body">
                        <strong>@icon</strong> @toast.Message
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        }
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var toastElements = document.querySelectorAll('.toast');
            
            toastElements.forEach(function(toastElement) {
                var toast = new bootstrap.Toast(toastElement, {
                    autohide: true,
                    delay: parseInt(toastElement.getAttribute('data-bs-delay'))
                });
                toast.show();
            });
        });
    </script>
}
